[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gemini-batch"
version = "0.7.0"
description = "A framework for batch processing with Google's Gemini API"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Sean Brar", email = "hello@seanbrar.com"}
]
requires-python = ">=3.13"
dependencies = [
    "google-genai>=1.20.0",
    "python-dotenv>=1.1.0",
    "PyPDF2>=3.0.1",
    "Pillow>=11.2.1",
    "python-magic>=0.4.27",
    "httpx>=0.27.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.1",
    "pyfakefs>=5.0.0",
    "pydantic>=2.0.0",
    "ruff>=0.5.0",
    "pip-tools",
    "vulture",
    "pytest-golden",
]
viz = [
    "matplotlib>=3.10.3",
    "seaborn>=0.13.2",
    "pandas>=2.3.0",
]
# Combined group for easy installation
all = [
    "gemini-batch[dev,viz]",
]

[project.urls]
Homepage = "https://github.com/seanbrar/gemini-batch-prediction"
Repository = "https://github.com/seanbrar/gemini-batch-prediction"

# --- Build, Test, and Coverage Tools ---

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["notebooks*", "tests*", "examples*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--import-mode=importlib",
    "--cov=gemini_batch",
    "--cov-report=html:coverage_html_report",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "-v"
]
enable_assertion_pass_hook = true

[tool.coverage.run]
source = ["src/gemini_batch"]
omit = [
    "tests/*",
    "src/gemini_batch/__init__.py",
    "src/gemini_batch/analysis/visualization.py",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.coverage.html]
directory = "coverage_html_report"

# --- Ruff Linter and Formatter Configuration ---

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP", "B", "C4", "SIM"]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["gemini_batch"]
force-sort-within-sections = true
split-on-trailing-comma = true