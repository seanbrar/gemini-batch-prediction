name: Release

"on":
  workflow_dispatch:  # Manual trigger only
    inputs:
      dry_run:
        description: 'Run in dry-run mode to preview changes'
        required: false
        type: boolean
        default: true # Defaults to dry-run to prevent accidental releases.

jobs:
  release:
    runs-on: ubuntu-latest

    # Prevents multiple instances of this release job from running at the same time,
    # which avoids race conditions where two releases could be created for the same code.
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false

    # Defines the permissions granted to the GITHUB_TOKEN for this job.
    # These are required by semantic-release to interact with the repository.
    permissions:
      contents: write      # To push commits (for version bumps) and create tags/releases.
      issues: write        # To comment on issues fixed in the release.
      pull-requests: write # To comment on PRs included in the release.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetches the entire Git history, which semantic-release needs
          # to analyze all commits since the last release.
          fetch-depth: 0
          ssh-key: ${{ secrets.RELEASE_WORKFLOW_DEPLOY_KEY }}

      - name: Install build dependencies
        run: python -m pip install build

      - name: Create and Publish Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.2.0
        with:
          # The action also needs to be authenticated with the PAT.
          github_token: ${{ secrets.SEMANTIC_RELEASE_PAT }}
          no_operation_mode: ${{ github.event.inputs.dry_run }}

      # Dry run summary with next steps
      - name: Dry Run Summary
        if: steps.release.outputs.released == 'false' && github.event.inputs.dry_run == true
        run: |
            {
              echo "## 🛡️ Dry Run Completed"
              echo "A new release **v${{ steps.release.outputs.version }}** is ready to be published."
              echo "To publish, re-run this workflow with **dry_run** set to **false**."
            } >> "$GITHUB_STEP_SUMMARY"

      - name: Release Summary
        if: steps.release.outputs.released == 'true'
        run: |
            {
              echo "## ✅ Release Successful"
              echo "Version **${{ steps.release.outputs.tag }}** has been successfully published."
              echo ""
              echo "🔍 **[View the release on GitHub](${{ steps.release.outputs.link }})**"
            } >> "$GITHUB_STEP_SUMMARY"
