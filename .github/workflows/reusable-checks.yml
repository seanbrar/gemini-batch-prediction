# Reusable workflow for code quality checks
# Called by both CI and release workflows to ensure consistency
# Accepts Python version as input to support version matrix testing
#
# Testing Strategy:
# - Feature branch pushes: Fast tests only (~30s)
# - Draft PRs: Fast tests with DEBUG logging
# - Ready PRs: Progressive + integration + workflows (< 2 min)
# - Main branch: Everything + coverage
name: Reusable Python Checks

"on":
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      test-command:
        required: true
        type: string
      upload-coverage:
        required: false
        type: boolean
        default: false

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      # Checkout code and set up Python environment
      - uses: actions/checkout@v4
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        run: make install-dev

      - name: Lint code
        run: make lint

      - name: Run Tests
        env:
          # Set the Makefile variable based on the PR's draft status.
          # The 'true' on the end is needed because github.event.pull_request.draft is a boolean.
          TEST_LOG_LEVEL: ${{ github.event_name == 'pull_request' && github.event.pull_request.draft == true && 'DEBUG' || 'WARNING' }}
        run: ${{ inputs.test-command }}

      - name: Upload coverage to Codecov
        # Explicitly controlled by caller. Use when coverage XML or HTML is produced.
        if: inputs.upload-coverage == true
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false  # Don't fail CI if codecov upload fails
          verbose: true
